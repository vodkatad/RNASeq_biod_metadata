# Use snakemake metadata_forall  to check if you have basic metadata available for all the samples in the batches
# that you want to analyze.
include: "./conf.sk"

rule wide_to_long_metadata:
    input: DATA_DIR+"/RNAseq_OVERVIEW_withheader_fixed.tsv"
    output: "metadata"
    params: tool=BIN_DIR+"/overview2long"
    shell:
        """
            {params.tool} {input} {output}
        """


rule has_metadata:
    input: "metadata"
    output: "has_metadata"
    shell:
        """
            cut -f 2 {input} | sort | uniq > {output}
        """

rule batches:
    input: BATCHES_FASTQS
    output: "fastq_batches"
    run:
        batch = 1
        with open(output[0], 'w') as out:
            for f in input:
                with open(f,'r') as inf:
                    for l in inf.readlines():
                        l = l.rstrip("\n")
                        l = l.replace('_R1.fastq.gz','')
                        out.write(l + "\t" + str(batch) + "\n")
                    batch += 1            

rule info_and_fastq:
    input: meta="metadata", fastq="fastq_batches"
    output: "complete_samples_batch"
    shell:
        """
            cat {input.fastq} | filter_1col 1 <(cut -f 2 {input.meta}) > {output}
        """

rule metadata_forall:
    input: "complete_samples_batch", "fastq_batches"
    shell:
        """
            n1=$(cat {input[0]} | wc -l);
            n2=$(cat {input[1]} | wc -l);
            if [ "$n1" -eq "$n2" ]; then
                echo "Good to go!"
            else
                echo "Go back to square one!"
            fi;
        """

# Note: for batch correction we want the smaller batch a genealogy appears (probably...for library prep batch effect honestly we will never be sure), 
# but for alignment we want the higher one
## Progressive enrichment of metadata
## TODO keep min/max whatever check univocity
rule metadata_batch:
    input: batch="complete_samples_batch", metadata="metadata"
    output: "metadata_batch"
    shell:
        """
            translate -a -n {input.metadata} 1 < {input.batch} > {output}
        """

# TODO rule add depth? HOW? Ask Franceschino or Claudio for the list.

rule add_cetuxi:
    input: start="metadata_batch", add=DATA_DIR+"/cetuxi_w3.txt"
    output: "metadata_batch_w3vivocetuxi"
    shell:
        """
            bawk '{{print $0,substr($1,0,7)}}' {input.start} | translate -v -e NA {input.add} 4 > {output}
        """

rule add_irino:
    input: start="metadata_batch_w3vivocetuxi", add=DATA_DIR+"/irinotecan_w3.txt"
    output: "metadata_batch_w3vivocetuxi_w3vivoirino"
    shell:
        """
            bawk '{{print $0,substr($1,0,7)}}' {input.start} | translate -v -e NA <(sed 1d {input.add} | bawk '{{print $1,$2/100}}') 5 > {output}
        """

# rule add_sanger:
#     input: start="metadata_batch_w3vivocetuxi_w3vivoirino", add=DATA_DIR+"/sanger.txt"
#     shell:
#         """
        
#         """

# rule add_vwes:

# rule add mutations from dtb_mutations?

# Will then select all PDO, all PDX and all human samples from the whole list to align all together? Downloading from different places will
# be complicated tough...