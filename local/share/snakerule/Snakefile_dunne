MATRIX="../merged_hs_mm.tsv.gz"
METADATA="../selected_metadata_annot_final_nolinfo_nooutlier"
WANTED="../../../local/share/data/kras_mutated"
WANTED2="../../../local/share/data/kras_mut_hasrnaseq.tsv" # this was wrong, had only LMX_BASALE!
WANTEDT="../../../local/share/data/basali_h_pdo.tsv"

rule only_human:
    input: MATRIX
    output: "h_counts.tsv.gz"
    shell:
        """
            zcat {input} | head -n 1 > {output}.tmp || echo 'plh'
            zcat {input} | sed 1d | bawk '$1 ~ "H_"' | sed 's/^H_//1' >> {output}.tmp
            gzip -c {output}.tmp > {output}
            rm {output}.tmp
        """    


rule select_wanted:
    input: wanted=WANTED, metadata=METADATA, counts="h_counts.tsv.gz", types=WANTEDT
    output: counts="selected_counts.tsv.gz", metadata="selected_metadata.tsv"
    shell:
        """
            head -n 1 {input.metadata} | cut -f 1,6,7 > {output.metadata}
            sed 1d {input.metadata} | filter_1col 7 {input.types} | grep -f <(cut -f 1 {input.wanted}) | cut -f 1,6,7 >> {output.metadata}
            cat <(echo Geneid) <(cut -f 1 {output.metadata}) > {output.counts}.tmp
            zcat {input.counts} | transpose | filter_1col 1 {output.counts}.tmp | transpose | gzip > {output.counts}            
        """ 

rule split_in_three:
    input: "human_counts.tsv.gz", "human_metadata.tsv", "organoids_counts.tsv.gz", "organoids_metadata.tsv", "xeno_counts.tsv.gz", "xeno_metadata.tsv"


rule split:
    input: counts="selected_counts.tsv.gz", meta="selected_metadata.tsv", filter="../../../local/share/data/{class}"
    output: counts="{class}_counts.tsv.gz", metadata="{class}_metadata.tsv"
    shell:
        """
            head -n 1 {input.meta} > {output.metadata}
            sed 1d {input.meta} | filter_1col 3 {input.filter} >> {output.metadata}
            cat <(echo Geneid) <(cut -f 1 {output.metadata}) > {output.counts}.tmp
            zcat {input.counts} | transpose | filter_1col 1 {output.counts}.tmp | transpose | gzip > {output.counts}            
        """

rule kras_mut:
    input: w=WANTED, meta="selected_metadata.tsv"
    output: "KRAS_mut"
    shell:
        """
            bawk '$3!=""{{print $1,$3}} $4!=""{{print $1,$4}}' {input.w} | filter_1col 1 <(bawk '{{print substr($1,0,7)}}' {input.meta}) > {output}
        """